一、面向对象的需求分析：
	1、识别参与者
	2、合并需求获得用例
	3、细化用例描述
	4、调整用例模型

二、面向对象的系统分析
	1、标识对象和类
	2、标识结构
	3、定义主题
	4、定义属性和服务

主题层->对象/类层->结构层->属性层->服务层

三、面向对象的系统设计
	1、提取边界类、实体类、控制类
	2、构造行为模型
	3、设计技术支撑方案
	4、设计用户界面
	5、精华设计模型

实体类：保存需要存储在永久存储介质中的信息，一般由业务领域的核心名词，
一定有属性，不一定又操作。
控制类：控制用例工作的类，对用例特有的控制行为进行建模，一般由用例中
动宾短语组成，不一定有属性，一定有操作。
边界类：用于封装在用例内外流动的信息或数据流，位于系统与外界的交接处，
包括所有窗体、报表、打印机、扫描仪等，可以既有属性也有方法。

四、面向对象的编程

计算机程序由单个能起到子程序作用的单元或对象组合而成。OOP达到了软件
工程的三个主要目标：重用性、灵活性、扩展性。00P=对象+类+继承+多态+消息，
其核心概念是类和对象。
OOP以对象为核心，认为程序由一系列的对象组成。


	
